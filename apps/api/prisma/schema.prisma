// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String   @id @default(uuid())
  clerkId        String   @unique
  email          String   @unique
  name           String?
  profilePicture String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model UserCredit {
  id        String   @id @default(cuid())
  userId    String   @unique
  amount    Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

enum ModelTrainingStatusEnum {
  Pending
  Generated
  Failed
}

enum ModelTypeEnum {
  Man
  Woman
  Others
}

enum EthnicityEnum {
  White
  Black
  Asian_American   @map("Asian American")
  East_Asian       @map("East Asian")
  South_East_Asian @map("South East Asian")
  South_Asian      @map("South Asian")
  Middle_Eastern   @map("Middle Eastern")
  Pacific
  Hispanic
}

enum EyeColorEnum {
  Brown
  Blue
  Hazel
  Gray
}

model Model {
  id             String                  @id @default(uuid())
  name           String
  type           ModelTypeEnum
  age            Int
  ethnicity      EthnicityEnum
  eyeColor       EyeColorEnum
  bald           Boolean
  userId         String
  triggerWord    String?
  tensorPath     String?
  thumbnail      String?
  trainingStatus ModelTrainingStatusEnum @default(Pending)
  outputImages    OutputImages[]
  createdAt      DateTime                @default(now())
  updatedAt      DateTime                @updatedAt
  aiRequestId    String?
  zipUrl         String
  open           Boolean                 @default(false)

  @@index([aiRequestId])
}

enum OutputImageStatusEnum {
  Pending
  Generated
  Failed
}

model OutputImages {
  id        String  @id   @default(uuid())
  imageUrl  String  @default("")
  modelId   String
  userId    String
  prompt    String
  aiRequestId    String?
  status    OutputImageStatusEnum   @default(Pending)
  model     Model   @relation(fields: [modelId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([aiRequestId])
}
